const TelegramBot = require('node-telegram-bot-api');
const request = require('request');
const token = '725276890:AAFZsqsDgLvLfhgY8t-9lhjhCN-ZwAazqUM';

//PROXY
const bot = new TelegramBot(token, {
  polling: true,
  request: {
    proxy: "http://194.26.180.142:3128"
  }
});

function newQuestion() {
  bot.sendMessage(-276583637, '–†–∞–±–æ—Ç—è–≥–∞ john –≤—ã—à–µ–ª –Ω–∞ —Ä–∞–±–æ—Ç—É');//—Å–≤—è–∑—ã–≤–∞–µ–º –±–æ—Ç–∞ —Å —á–∞—Ç–æ–º
}
newQuestion();


let like = [];
let dislike = []
let ratingController = {};

function canUserVote (user, date) {
  console.log('ratingController[user]',ratingController.id)
    if (!ratingController.id) {
            console.log("–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â—ë –Ω–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª");
            return true
    } else {
        if (ratingController.lastMessage + 30 <= date) {
            console.log("–í—ã —Å–º–æ–≥–ª–∏ –µ—â–µ —Ä–∞–∑ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å");
            return true
        } else {
            console.log("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –µ—â—ë –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å", ratingController.lastMessage + 30 - date, "—Å–µ–∫—É–Ω–¥");
            return false
        }
    }
}


bot.onText(/.+/, function(msg, match) {
  let answer = msg.reply_to_message
  let conditions1 = answer && msg.from.id != answer.from.id
  let textLowerCase = msg.text.toLowerCase()

  if ((conditions1) && (msg.text === "+" || textLowerCase === "—Å–ø–∞—Å–∏–±–æ" || textLowerCase === "—Å–ø—Å" || msg.text === "üëç") && canUserVote(msg.from.id,msg.date)) {
    ratingController = { id: msg.from.id , lastMessage: msg.date}
    like.push(answer.from.first_name);
  }
  if ((conditions1) && (msg.text === "-" || textLowerCase === "–¥–∏–∑–ª–∞–π–∫" || textLowerCase === "–Ω–µ—Ç" || msg.text === "üëé") && canUserVote(msg.from.id,msg.date)) {
    ratingController = { id: msg.from.id , lastMessage: msg.date}
    dislike.push(answer.from.first_name)
  }
})

function countFunc(like, dislike) {//—Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥—Å—á–µ—Ç–∞ –ª–∞–π–∫–æ–≤ –∏ –¥–∏–∑–ª–∞–π–∫–æ–≤
  let finalRating = {};

  for (let i = 0; i < like.length; i++) {
    if (finalRating[like[i]] === undefined) {
      finalRating[like[i]] = 1;
    } else {
      finalRating[like[i]]++;
    }
  };
  for (let i = 0; i < dislike.length; i++) {
    if (finalRating[dislike[i]] === undefined) {
      finalRating[dislike[i]] = -1;
    } else {
      finalRating[dislike[i]]--;
    }
  }

  return finalRating //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–¥—Å—á–µ—Ç–∞ –ª–∞–π–∫–æ–≤ –∏ –¥–∏–∑–ª–∞–π–∫–æ–≤
}

bot.onText(/\/history/,function showHistory(msg) {
  console.log(msg)
})

bot.onText(/\/rating/, function showRating(msg) { // –≤—ã–≤–æ–¥ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ –ø–æ –∫–æ–º–∞–Ω–¥–µ /rating
  let object = countFunc (like, dislike)
  let result = [];
  for (let name in object) {
    result.push([name, object[name]]);
  }
  result.sort(function(a, b) {
    return b[1] - a[1];
  });

  let message = ""
  for (let i = 0; i < result.length; i++) {
    message += i + 1 + ' –º–µ—Å—Ç–æ ' + result[i][0] + " : " + result[i][1] + " üíô \n";
  }

  console.log(message)
  bot.sendMessage(msg.chat.id, message)
})
